// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_INSTANCEDGRIDPOSITIONCOMPONENTARRAYDATA_FLAT_H_
#define FLATBUFFERS_GENERATED_INSTANCEDGRIDPOSITIONCOMPONENTARRAYDATA_FLAT_H_

#include "flatbuffers/flatbuffers.h"

#include "GridPosition_generated.h"
#include "GridPositionComponentArrayData_generated.h"

namespace flat {

struct InstancedGridPositionComponentArrayData;
struct InstancedGridPositionComponentArrayDataBuilder;

struct InstancedGridPositionComponentArrayData FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef InstancedGridPositionComponentArrayDataBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_INSTANCEDGRIDPOSITIONCOMPONENTARRAY = 4
  };
  const flatbuffers::Vector<flatbuffers::Offset<flat::GridPositionComponentArrayData>> *instancedGridPositionComponentArray() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<flat::GridPositionComponentArrayData>> *>(VT_INSTANCEDGRIDPOSITIONCOMPONENTARRAY);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_INSTANCEDGRIDPOSITIONCOMPONENTARRAY) &&
           verifier.VerifyVector(instancedGridPositionComponentArray()) &&
           verifier.VerifyVectorOfTables(instancedGridPositionComponentArray()) &&
           verifier.EndTable();
  }
};

struct InstancedGridPositionComponentArrayDataBuilder {
  typedef InstancedGridPositionComponentArrayData Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_instancedGridPositionComponentArray(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flat::GridPositionComponentArrayData>>> instancedGridPositionComponentArray) {
    fbb_.AddOffset(InstancedGridPositionComponentArrayData::VT_INSTANCEDGRIDPOSITIONCOMPONENTARRAY, instancedGridPositionComponentArray);
  }
  explicit InstancedGridPositionComponentArrayDataBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  InstancedGridPositionComponentArrayDataBuilder &operator=(const InstancedGridPositionComponentArrayDataBuilder &);
  flatbuffers::Offset<InstancedGridPositionComponentArrayData> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<InstancedGridPositionComponentArrayData>(end);
    return o;
  }
};

inline flatbuffers::Offset<InstancedGridPositionComponentArrayData> CreateInstancedGridPositionComponentArrayData(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flat::GridPositionComponentArrayData>>> instancedGridPositionComponentArray = 0) {
  InstancedGridPositionComponentArrayDataBuilder builder_(_fbb);
  builder_.add_instancedGridPositionComponentArray(instancedGridPositionComponentArray);
  return builder_.Finish();
}

inline flatbuffers::Offset<InstancedGridPositionComponentArrayData> CreateInstancedGridPositionComponentArrayDataDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<flatbuffers::Offset<flat::GridPositionComponentArrayData>> *instancedGridPositionComponentArray = nullptr) {
  auto instancedGridPositionComponentArray__ = instancedGridPositionComponentArray ? _fbb.CreateVector<flatbuffers::Offset<flat::GridPositionComponentArrayData>>(*instancedGridPositionComponentArray) : 0;
  return flat::CreateInstancedGridPositionComponentArrayData(
      _fbb,
      instancedGridPositionComponentArray__);
}

inline const flat::InstancedGridPositionComponentArrayData *GetInstancedGridPositionComponentArrayData(const void *buf) {
  return flatbuffers::GetRoot<flat::InstancedGridPositionComponentArrayData>(buf);
}

inline const flat::InstancedGridPositionComponentArrayData *GetSizePrefixedInstancedGridPositionComponentArrayData(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<flat::InstancedGridPositionComponentArrayData>(buf);
}

inline bool VerifyInstancedGridPositionComponentArrayDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<flat::InstancedGridPositionComponentArrayData>(nullptr);
}

inline bool VerifySizePrefixedInstancedGridPositionComponentArrayDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<flat::InstancedGridPositionComponentArrayData>(nullptr);
}

inline void FinishInstancedGridPositionComponentArrayDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::InstancedGridPositionComponentArrayData> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedInstancedGridPositionComponentArrayDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::InstancedGridPositionComponentArrayData> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace flat

#endif  // FLATBUFFERS_GENERATED_INSTANCEDGRIDPOSITIONCOMPONENTARRAYDATA_FLAT_H_
