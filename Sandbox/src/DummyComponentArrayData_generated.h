// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_DUMMYCOMPONENTARRAYDATA_FLAT_H_
#define FLATBUFFERS_GENERATED_DUMMYCOMPONENTARRAYDATA_FLAT_H_

#include "flatbuffers/flatbuffers.h"

namespace flat {

struct DummyComponentData;
struct DummyComponentDataBuilder;

struct DummyComponentArrayData;
struct DummyComponentArrayDataBuilder;

struct DummyComponentData FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef DummyComponentDataBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_DUMMYVALUE = 4
  };
  int32_t dummyValue() const {
    return GetField<int32_t>(VT_DUMMYVALUE, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<int32_t>(verifier, VT_DUMMYVALUE) &&
           verifier.EndTable();
  }
};

struct DummyComponentDataBuilder {
  typedef DummyComponentData Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_dummyValue(int32_t dummyValue) {
    fbb_.AddElement<int32_t>(DummyComponentData::VT_DUMMYVALUE, dummyValue, 0);
  }
  explicit DummyComponentDataBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  DummyComponentDataBuilder &operator=(const DummyComponentDataBuilder &);
  flatbuffers::Offset<DummyComponentData> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<DummyComponentData>(end);
    return o;
  }
};

inline flatbuffers::Offset<DummyComponentData> CreateDummyComponentData(
    flatbuffers::FlatBufferBuilder &_fbb,
    int32_t dummyValue = 0) {
  DummyComponentDataBuilder builder_(_fbb);
  builder_.add_dummyValue(dummyValue);
  return builder_.Finish();
}

struct DummyComponentArrayData FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef DummyComponentArrayDataBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_DUMMYCOMPONENTARRAY = 4
  };
  const flatbuffers::Vector<flatbuffers::Offset<flat::DummyComponentData>> *dummyComponentArray() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<flat::DummyComponentData>> *>(VT_DUMMYCOMPONENTARRAY);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_DUMMYCOMPONENTARRAY) &&
           verifier.VerifyVector(dummyComponentArray()) &&
           verifier.VerifyVectorOfTables(dummyComponentArray()) &&
           verifier.EndTable();
  }
};

struct DummyComponentArrayDataBuilder {
  typedef DummyComponentArrayData Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_dummyComponentArray(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flat::DummyComponentData>>> dummyComponentArray) {
    fbb_.AddOffset(DummyComponentArrayData::VT_DUMMYCOMPONENTARRAY, dummyComponentArray);
  }
  explicit DummyComponentArrayDataBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  DummyComponentArrayDataBuilder &operator=(const DummyComponentArrayDataBuilder &);
  flatbuffers::Offset<DummyComponentArrayData> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<DummyComponentArrayData>(end);
    return o;
  }
};

inline flatbuffers::Offset<DummyComponentArrayData> CreateDummyComponentArrayData(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flat::DummyComponentData>>> dummyComponentArray = 0) {
  DummyComponentArrayDataBuilder builder_(_fbb);
  builder_.add_dummyComponentArray(dummyComponentArray);
  return builder_.Finish();
}

inline flatbuffers::Offset<DummyComponentArrayData> CreateDummyComponentArrayDataDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<flatbuffers::Offset<flat::DummyComponentData>> *dummyComponentArray = nullptr) {
  auto dummyComponentArray__ = dummyComponentArray ? _fbb.CreateVector<flatbuffers::Offset<flat::DummyComponentData>>(*dummyComponentArray) : 0;
  return flat::CreateDummyComponentArrayData(
      _fbb,
      dummyComponentArray__);
}

inline const flat::DummyComponentArrayData *GetDummyComponentArrayData(const void *buf) {
  return flatbuffers::GetRoot<flat::DummyComponentArrayData>(buf);
}

inline const flat::DummyComponentArrayData *GetSizePrefixedDummyComponentArrayData(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<flat::DummyComponentArrayData>(buf);
}

inline bool VerifyDummyComponentArrayDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<flat::DummyComponentArrayData>(nullptr);
}

inline bool VerifySizePrefixedDummyComponentArrayDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<flat::DummyComponentArrayData>(nullptr);
}

inline void FinishDummyComponentArrayDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::DummyComponentArrayData> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedDummyComponentArrayDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::DummyComponentArrayData> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace flat

#endif  // FLATBUFFERS_GENERATED_DUMMYCOMPONENTARRAYDATA_FLAT_H_
