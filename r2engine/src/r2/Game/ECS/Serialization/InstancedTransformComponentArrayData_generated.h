// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_INSTANCEDTRANSFORMCOMPONENTARRAYDATA_FLAT_H_
#define FLATBUFFERS_GENERATED_INSTANCEDTRANSFORMCOMPONENTARRAYDATA_FLAT_H_

#include "flatbuffers/flatbuffers.h"

#include "TransformComponentArrayData_generated.h"

namespace flat {

struct InstancedTransformComponentArrayData;
struct InstancedTransformComponentArrayDataBuilder;

struct InstancedTransformComponentArrayData FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef InstancedTransformComponentArrayDataBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_INSTANCEDTRANSFORMCOMPONENTARRAY = 4
  };
  const flatbuffers::Vector<flatbuffers::Offset<flat::TransformComponentArrayData>> *instancedTransformComponentArray() const {
    return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<flat::TransformComponentArrayData>> *>(VT_INSTANCEDTRANSFORMCOMPONENTARRAY);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_INSTANCEDTRANSFORMCOMPONENTARRAY) &&
           verifier.VerifyVector(instancedTransformComponentArray()) &&
           verifier.VerifyVectorOfTables(instancedTransformComponentArray()) &&
           verifier.EndTable();
  }
};

struct InstancedTransformComponentArrayDataBuilder {
  typedef InstancedTransformComponentArrayData Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_instancedTransformComponentArray(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flat::TransformComponentArrayData>>> instancedTransformComponentArray) {
    fbb_.AddOffset(InstancedTransformComponentArrayData::VT_INSTANCEDTRANSFORMCOMPONENTARRAY, instancedTransformComponentArray);
  }
  explicit InstancedTransformComponentArrayDataBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  InstancedTransformComponentArrayDataBuilder &operator=(const InstancedTransformComponentArrayDataBuilder &);
  flatbuffers::Offset<InstancedTransformComponentArrayData> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<InstancedTransformComponentArrayData>(end);
    return o;
  }
};

inline flatbuffers::Offset<InstancedTransformComponentArrayData> CreateInstancedTransformComponentArrayData(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flat::TransformComponentArrayData>>> instancedTransformComponentArray = 0) {
  InstancedTransformComponentArrayDataBuilder builder_(_fbb);
  builder_.add_instancedTransformComponentArray(instancedTransformComponentArray);
  return builder_.Finish();
}

inline flatbuffers::Offset<InstancedTransformComponentArrayData> CreateInstancedTransformComponentArrayDataDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<flatbuffers::Offset<flat::TransformComponentArrayData>> *instancedTransformComponentArray = nullptr) {
  auto instancedTransformComponentArray__ = instancedTransformComponentArray ? _fbb.CreateVector<flatbuffers::Offset<flat::TransformComponentArrayData>>(*instancedTransformComponentArray) : 0;
  return flat::CreateInstancedTransformComponentArrayData(
      _fbb,
      instancedTransformComponentArray__);
}

inline const flat::InstancedTransformComponentArrayData *GetInstancedTransformComponentArrayData(const void *buf) {
  return flatbuffers::GetRoot<flat::InstancedTransformComponentArrayData>(buf);
}

inline const flat::InstancedTransformComponentArrayData *GetSizePrefixedInstancedTransformComponentArrayData(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<flat::InstancedTransformComponentArrayData>(buf);
}

inline bool VerifyInstancedTransformComponentArrayDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<flat::InstancedTransformComponentArrayData>(nullptr);
}

inline bool VerifySizePrefixedInstancedTransformComponentArrayDataBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<flat::InstancedTransformComponentArrayData>(nullptr);
}

inline void FinishInstancedTransformComponentArrayDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::InstancedTransformComponentArrayData> root) {
  fbb.Finish(root);
}

inline void FinishSizePrefixedInstancedTransformComponentArrayDataBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::InstancedTransformComponentArrayData> root) {
  fbb.FinishSizePrefixed(root);
}

}  // namespace flat

#endif  // FLATBUFFERS_GENERATED_INSTANCEDTRANSFORMCOMPONENTARRAYDATA_FLAT_H_
