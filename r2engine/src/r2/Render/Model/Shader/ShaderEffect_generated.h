// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_SHADEREFFECT_FLAT_H_
#define FLATBUFFERS_GENERATED_SHADEREFFECT_FLAT_H_

#include "flatbuffers/flatbuffers.h"

namespace flat {

struct ShaderEffect;
struct ShaderEffectBuilder;

enum eShaderEffectNames {
  eShaderEffectNames_NONE = 0,
  eShaderEffectNames_MIN = eShaderEffectNames_NONE,
  eShaderEffectNames_MAX = eShaderEffectNames_NONE
};

inline const eShaderEffectNames (&EnumValueseShaderEffectNames())[1] {
  static const eShaderEffectNames values[] = {
    eShaderEffectNames_NONE
  };
  return values;
}

inline const char * const *EnumNameseShaderEffectNames() {
  static const char * const names[2] = {
    "NONE",
    nullptr
  };
  return names;
}

inline const char *EnumNameeShaderEffectNames(eShaderEffectNames e) {
  if (flatbuffers::IsOutRange(e, eShaderEffectNames_NONE, eShaderEffectNames_NONE)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNameseShaderEffectNames()[index];
}

struct ShaderEffect FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  typedef ShaderEffectBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_STATICSHADER = 4,
    VT_DYNAMICSHADER = 6
  };
  uint64_t staticShader() const {
    return GetField<uint64_t>(VT_STATICSHADER, 0);
  }
  uint64_t dynamicShader() const {
    return GetField<uint64_t>(VT_DYNAMICSHADER, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint64_t>(verifier, VT_STATICSHADER) &&
           VerifyField<uint64_t>(verifier, VT_DYNAMICSHADER) &&
           verifier.EndTable();
  }
};

struct ShaderEffectBuilder {
  typedef ShaderEffect Table;
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_staticShader(uint64_t staticShader) {
    fbb_.AddElement<uint64_t>(ShaderEffect::VT_STATICSHADER, staticShader, 0);
  }
  void add_dynamicShader(uint64_t dynamicShader) {
    fbb_.AddElement<uint64_t>(ShaderEffect::VT_DYNAMICSHADER, dynamicShader, 0);
  }
  explicit ShaderEffectBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ShaderEffectBuilder &operator=(const ShaderEffectBuilder &);
  flatbuffers::Offset<ShaderEffect> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<ShaderEffect>(end);
    return o;
  }
};

inline flatbuffers::Offset<ShaderEffect> CreateShaderEffect(
    flatbuffers::FlatBufferBuilder &_fbb,
    uint64_t staticShader = 0,
    uint64_t dynamicShader = 0) {
  ShaderEffectBuilder builder_(_fbb);
  builder_.add_dynamicShader(dynamicShader);
  builder_.add_staticShader(staticShader);
  return builder_.Finish();
}

inline const flat::ShaderEffect *GetShaderEffect(const void *buf) {
  return flatbuffers::GetRoot<flat::ShaderEffect>(buf);
}

inline const flat::ShaderEffect *GetSizePrefixedShaderEffect(const void *buf) {
  return flatbuffers::GetSizePrefixedRoot<flat::ShaderEffect>(buf);
}

inline const char *ShaderEffectIdentifier() {
  return "seff";
}

inline bool ShaderEffectBufferHasIdentifier(const void *buf) {
  return flatbuffers::BufferHasIdentifier(
      buf, ShaderEffectIdentifier());
}

inline bool VerifyShaderEffectBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<flat::ShaderEffect>(ShaderEffectIdentifier());
}

inline bool VerifySizePrefixedShaderEffectBuffer(
    flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<flat::ShaderEffect>(ShaderEffectIdentifier());
}

inline const char *ShaderEffectExtension() {
  return "seff";
}

inline void FinishShaderEffectBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::ShaderEffect> root) {
  fbb.Finish(root, ShaderEffectIdentifier());
}

inline void FinishSizePrefixedShaderEffectBuffer(
    flatbuffers::FlatBufferBuilder &fbb,
    flatbuffers::Offset<flat::ShaderEffect> root) {
  fbb.FinishSizePrefixed(root, ShaderEffectIdentifier());
}

}  // namespace flat

#endif  // FLATBUFFERS_GENERATED_SHADEREFFECT_FLAT_H_
