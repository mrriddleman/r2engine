include "AssetName.fbs";

namespace flat;

file_identifier "sprm";
file_extension "sprm";

enum MinTextureFilter : uint8
{
	LINEAR = 0,
	NEAREST,
	NEAREST_MIPMAP_NEAREST,
	LINEAR_MIPMAP_NEAREST,
	NEAREST_MIPMAP_LINEAR,
	LINEAR_MIPMAP_LINEAR
}

enum MagTextureFilter : uint8
{
	LINEAR = 0,
	NEAREST,
}

enum TextureWrapMode : uint8
{
	REPEAT = 0,
	CLAMP_TO_EDGE,
	CLAMP_TO_BORDER,
	MIRRORED_REPEAT,
}

enum ShaderPropertyType: uint16
{
	ALBEDO = 0,
	NORMAL,
	EMISSION,
	METALLIC,
	ROUGHNESS,
	AMBIENT_OCCLUSION,
	HEIGHT,
	ANISOTROPY,
	ANISOTROPY_DIRECTION,
	DETAIL,
	HEIGHT_SCALE,
	REFLECTANCE,
	CLEAR_COAT,
	CLEAR_COAT_ROUGHNESS,
	CLEAR_COAT_NORMAL,
	BENT_NORMAL,
	SHEEN_COLOR,
	SHEEN_ROUGHNESS,
	DOUBLE_SIDED,
	SHADER,
	SHADER_DEFINE,
	SHADER_MATERIAL_FUNCTION,
	EMISSION_STRENGTH,
	ALPHA_CUTOFF,
	UNLIT,
	
}

enum ShaderPropertyPackingType : int8
{
	R = 0, 
	G,
	B,
	A,
	RGB,
	RGBA,
}

struct Colour
{
	r:float;
	g:float;
	b:float;
	a:float;
}

table ShaderFloatParam
{
	propertyType:ShaderPropertyType;
	value:float;
}

table ShaderColorParam
{
	propertyType:ShaderPropertyType;
	value:Colour;
}

table ShaderBoolParam
{
	propertyType:ShaderPropertyType;
	value:bool;
}

table ShaderULongParam
{
	propertyType:ShaderPropertyType;
	value:ulong (hash:"fnv1a_64");
}

table ShaderStringParam
{
	propertyType:ShaderPropertyType;
	value:string;
}

table ShaderStageParam
{
	propertyType:ShaderPropertyType;
	shader:ulong (hash:"fnv1a_64");
	shaderStageName:ulong (hash:"fnv1a_64");
	value:string;
}

table ShaderTextureParam
{
	propertyType:ShaderPropertyType;
	value:AssetName;
	packingType:ShaderPropertyPackingType;
	texturePack:AssetName;
	minFilter:MinTextureFilter;
	magFilter:MagTextureFilter;
	anisotropicFiltering:float;
	wrapS:TextureWrapMode;
	wrapT:TextureWrapMode;
	wrapR:TextureWrapMode;
	textureCoordIndex:uint;
}

table ShaderParams
{
	ulongParams:[ShaderULongParam];
	boolParams:[ShaderBoolParam];
	floatParams:[ShaderFloatParam];
	colorParams:[ShaderColorParam];
	textureParams:[ShaderTextureParam];
	stringParams:[ShaderStringParam];
	shaderStageParams:[ShaderStageParam];
}

root_type ShaderParams;