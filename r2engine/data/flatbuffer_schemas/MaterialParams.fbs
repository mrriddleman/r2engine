namespace flat;

file_identifier "mprm";
file_extension "mprm";


struct Colour
{
	r:float;
	g:float;
	b:float;
	a:float;
}

enum MaterialPropertyType: uint16
{
	ALBEDO = 0,
	NORMAL,
	EMISSION,
	METALLIC,
	ROUGHNESS,
	AMBIENT_OCCLUSION,
	HEIGHT,
	ANISOTROPY,
	ANISOTROPY_DIRECTION,
	DETAIL,
	HEIGHT_SCALE,
	REFLECTANCE,
	CLEAR_COAT,
	CLEAR_COAT_ROUGHNESS,
	CLEAR_COAT_NORMAL,
	BENT_NORMAL,
	SHEEN_COLOR,
	SHEEN_ROUGHNESS,
	DOUBLE_SIDED,
	SHADER,
	SHADER_DEFINE,
	SHADER_MATERIAL_FUNCTION
}

enum MaterialPropertyPackingType : int8
{
	R = 0, 
	G,
	B,
	A,
	RGB,
	RGBA,
}

table MaterialFloatParam
{
	propertyType:MaterialPropertyType;
	value:float;
}

table MaterialColorParam
{
	propertyType:MaterialPropertyType;
	value:Colour;
}

table MaterialBoolParam
{
	propertyType:MaterialPropertyType;
	value:bool;
}

table MaterialULongParam
{
	propertyType:MaterialPropertyType;
	value:ulong (hash:"fnv1a_64");
}

table MaterialStringParam
{
	propertyType:MaterialPropertyType;
	value:string;
}

table MaterialShaderParam
{
	propertyType:MaterialPropertyType;
	shader:ulong (hash:"fnv1a_64");
	shaderStageName:ulong (hash:"fnv1a_64");
	value:string;
}

enum MinTextureFilter : uint8
{
	LINEAR = 0,
	NEAREST,
	NEAREST_MIPMAP_NEAREST,
	LINEAR_MIPMAP_NEAREST,
	NEAREST_MIPMAP_LINEAR,
	LINEAR_MIPMAP_LINEAR
}

enum MagTextureFilter : uint8
{
	LINEAR = 0,
	NEAREST,
}


enum TextureWrapMode : uint8
{
	REPEAT = 0,
	CLAMP_TO_EDGE,
	CLAMP_TO_BORDER,
	MIRRORED_REPEAT,
}

table MaterialTextureParam
{
	propertyType:MaterialPropertyType;
	value:ulong (hash:"fnv1a_64");
	packingType:MaterialPropertyPackingType;
	texturePackName:ulong (hash:"fnv1a_64");
	texturePackNameStr:string;
	minFilter:MinTextureFilter;
	magFilter:MagTextureFilter;
	anisotropicFiltering:float;
	wrapS:TextureWrapMode;
	wrapT:TextureWrapMode;
	wrapR:TextureWrapMode;
}

table MaterialParams
{
	name:ulong (hash:"fnv1a_64");
	ulongParams:[MaterialULongParam];
	boolParams:[MaterialBoolParam];
	floatParams:[MaterialFloatParam];
	colorParams:[MaterialColorParam];
	textureParams:[MaterialTextureParam];
	stringParams:[MaterialStringParam];
	shaderParams:[MaterialShaderParam];
}

root_type MaterialParams;